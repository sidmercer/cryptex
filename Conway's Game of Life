# Conway's Game of Life
# no life no game
import random, time, copy
width = 10
height = 10

# Create a list of lists for the cells
nextcells = []  # nextcells is the list of lists
for x in range(width):
    column = []
    for y in range(height):
        if random.randint(0, 1) == 0:
            column.append('#')  # Add a living cell
        else:
            column.append('_')  # Add a dead cell
    nextcells.append(column)  # Add a new column to nextcells

count = 0

while True:  # Main program loop
    print("\n\n\n\n\n")  # Separate each step with newlines
    currentcells = copy.deepcopy(nextcells)  # Create a duplicate copy of nextcells

    # Print currentcells on the screen
    for y in range(height):
        for x in range(width):
            print(currentcells[x][y], end='')  # Print # or '_'
        print()  # Print a newline at the end of the row

    # Calculate the next step's cells based on current step's cells
    for x in range(width):
        for y in range(height):
            """ Get neighbouring coordinates
            '% width' ensures that leftcoord is always between 0 and width-1 """
            leftcoord = (x-1) % width
            rightcoord = (x+1) % width
            abovecoord = (y-1) % height
            belowcoord = (y+1) % height

            # Count numbers of living neighbours
            neighbors = 0
            if currentcells[leftcoord][abovecoord] == '#':
                # top-left neighbor is alive
                neighbors += 1

            if currentcells[x][abovecoord] == '#':
                # top neighbor is alive
                neighbors += 1

            if currentcells[rightcoord][abovecoord] == '#':
                # top-right neighbor is alive
                neighbors += 1

            if currentcells[rightcoord][y] == '#':
                # right neighbor alive
                neighbors += 1

            if currentcells[rightcoord][belowcoord] == '#':
                # bottom-right neighbor is alive
                neighbors += 1

            if currentcells[x][belowcoord] == '#':
                # bottom neighbor is alive
                neighbors += 1

            if currentcells[leftcoord][belowcoord] == '#':
                # bottom-left neighbor is alive
                neighbors += 1

            if currentcells[leftcoord][y] == '#':
                # left neighbor is alive
                neighbors += 1


            # Set cell based on Conway's game of life rules
            if currentcells[x][y] == '#' and (neighbors == 2 or neighbors == 3):
                # Living cell with 2 or 3 neighbors stays alive
                nextcells[x][y] = '#'
            elif currentcells[x][y] == '_' and neighbors == 3:
                # dead cell with 3 neighbors becomes alive
                nextcells[x][y] = '#'
            else:
                # everything else dies or stays dead
                nextcells[x][y] = '_'
    time.sleep(1)  # Add a 1 sec pause to reduce flickering
    count += 1
    if count == 5:
        break
